/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package onlinegadget;

import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class NewJFrame extends javax.swing.JFrame {

    Connection connect = null;
    Statement statement = null;
    PreparedStatement pStatement = null;
    ResultSet result = null;
    String selected_row,col,selectedColumn;
    String tab;
    String value;
     String selected_row2,col2,selectedColumn2;
    String tab2;
    String value2;
       DefaultTableModel model;
      List<Product> product;
     
  OnlineDatabaseImplement ob=new OnlineDatabaseImplement();
   
  ArrayList column;
  String tableName;
        
     /* Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        updatepanel.setVisible(true);
        text1.setVisible(false);
        text2.setVisible(false);
        okupdate.setVisible(false);
        productTable.setVisible(true);
        courier.setVisible(false);
        deleteorder.setVisible(false);
          updatebox.setVisible(false); 
          String tableName="product";
        column = ob.getColumnNames(tableName);
        for(int i=0;i<column.size();i++)
        {
            updatebox.addItem((String) column.get(i));
        }
    }
    
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        details = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        text1 = new javax.swing.JLabel();
        ok = new javax.swing.JButton();
        order = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        deleteorder = new javax.swing.JButton();
        updateproduct = new javax.swing.JButton();
        updatebox = new javax.swing.JComboBox<>();
        courier = new javax.swing.JButton();
        updatepanel = new javax.swing.JPanel();
        cust = new javax.swing.JButton();
        sent = new javax.swing.JButton();
        star = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        text2 = new javax.swing.JTextField();
        okupdate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin work");
        setPreferredSize(new java.awt.Dimension(900, 800));
        setResizable(false);

        details.setLayout(null);

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(productTable);

        details.add(jScrollPane1);
        jScrollPane1.setBounds(250, 100, 604, 480);

        text1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        text1.setForeground(new java.awt.Color(255, 102, 102));
        details.add(text1);
        text1.setBounds(20, 70, 190, 30);

        ok.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ok.setForeground(new java.awt.Color(255, 102, 102));
        ok.setText("See All Product");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });
        details.add(ok);
        ok.setBounds(590, 20, 210, 40);

        order.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        order.setForeground(new java.awt.Color(255, 102, 102));
        order.setText("See Ordered product");
        order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderActionPerformed(evt);
            }
        });
        details.add(order);
        order.setBounds(230, 620, 200, 40);

        delete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 102, 102));
        delete.setText("Delete Product");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        details.add(delete);
        delete.setBounds(380, 20, 170, 40);

        deleteorder.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        deleteorder.setForeground(new java.awt.Color(255, 102, 102));
        deleteorder.setText("Delete Ordered product");
        deleteorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteorderActionPerformed(evt);
            }
        });
        details.add(deleteorder);
        deleteorder.setBounds(440, 620, 230, 40);

        updateproduct.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateproduct.setForeground(new java.awt.Color(255, 102, 102));
        updateproduct.setText("update");
        updateproduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateproductActionPerformed(evt);
            }
        });
        details.add(updateproduct);
        updateproduct.setBounds(10, 20, 110, 30);

        updatebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        updatebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateboxActionPerformed(evt);
            }
        });
        details.add(updatebox);
        updatebox.setBounds(140, 20, 200, 30);

        courier.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        courier.setForeground(new java.awt.Color(255, 102, 102));
        courier.setText("Send For Courier");
        courier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courierActionPerformed(evt);
            }
        });
        details.add(courier);
        courier.setBounds(690, 620, 170, 40);

        cust.setText("See Star Customer");
        cust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custActionPerformed(evt);
            }
        });

        sent.setText("See Sent Product");
        sent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sentActionPerformed(evt);
            }
        });

        star.setBackground(new java.awt.Color(255, 102, 102));
        star.setForeground(new java.awt.Color(255, 0, 0));

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updatepanelLayout = new javax.swing.GroupLayout(updatepanel);
        updatepanel.setLayout(updatepanelLayout);
        updatepanelLayout.setHorizontalGroup(
            updatepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatepanelLayout.createSequentialGroup()
                .addGroup(updatepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updatepanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(updatepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sent)
                            .addComponent(cust)))
                    .addGroup(updatepanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(star, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(updatepanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        updatepanelLayout.setVerticalGroup(
            updatepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatepanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(cust)
                .addGap(18, 18, 18)
                .addComponent(star, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(sent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 311, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        details.add(updatepanel);
        updatepanel.setBounds(30, 180, 170, 500);
        details.add(text2);
        text2.setBounds(10, 110, 113, 36);

        okupdate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        okupdate.setForeground(new java.awt.Color(255, 102, 102));
        okupdate.setText("ok");
        okupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okupdateActionPerformed(evt);
            }
        });
        details.add(okupdate);
        okupdate.setBounds(140, 110, 90, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/onlinegadget/update.jpg"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(900, 700));
        jLabel1.setPreferredSize(new java.awt.Dimension(900, 700));
        details.add(jLabel1);
        jLabel1.setBounds(0, 0, 900, 700);

        jLabel2.setText("jLabel2");
        details.add(jLabel2);
        jLabel2.setBounds(40, 70, 34, 14);

        jLabel3.setText("jLabel3");
        details.add(jLabel3);
        jLabel3.setBounds(40, 80, 34, 14);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(details, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(details, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed

           productTable.removeAll();
       productTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                null
        ));
       
        
       DefaultTableModel model = (DefaultTableModel) productTable.getModel();
      
        //int i = 0;
        String n;
       // n=(String)tables.getSelectedItem();
        n="product";
        ArrayList content = ob.getColumnNames(n);
        //String[] columname=new String[content.size()];
        
        
        for (Object c : content) {
            
             //System.out.println("anni n"+c.toString());
             model.addColumn(c.toString());
            
           
        }
        int j = 0;
        Object[] rows;
        rows = new Object[content.size()];
        ResultSet result = ob.getTableData();

        try {
            while (result.next()) {
                String rowData = "";
                for (Object c : content) {
                    rowData = result.getString(c.toString());
                    rows[j++] = rowData;
                   }
               
                model.addRow(rows);
                j = 0;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }        
    }//GEN-LAST:event_okActionPerformed

    private void orderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderActionPerformed
        courier.setVisible(true);
        deleteorder.setVisible(true);       
        productTable.removeAll();
                
       productTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                null
        ));
       
        
       DefaultTableModel model = (DefaultTableModel) productTable.getModel();
      
        //int i = 0;
        String n;
       // n=(String)tables.getSelectedItem();
        n="ordertable";
        ArrayList content = ob.getColumnName(n);
        //String[] columname=new String[content.size()];
        
        
        for (Object c : content) {
            
             //System.out.println("anni n"+c.toString());
             model.addColumn(c.toString());
            
           
        }
        int j = 0;
        Object[] rows;
        rows = new Object[content.size()];
        ResultSet result = ob.getTableData();

        try {
            while (result.next()) {
                String rowData = "";
                for (Object c : content) {
                    rowData = result.getString(c.toString());
                    rows[j++] = rowData;
                   }
               
                model.addRow(rows);
                j = 0;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_orderActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
    int row = productTable.getSelectedRow();
    if (row>=0)
    {
        

        DefaultTableModel model = (DefaultTableModel) productTable.getModel();

        String selected_row = model.getValueAt(row, 0).toString();
        String col = productTable.getColumnName(0);
        System.out.println("row=" + selected_row + "column =" + col);
        String tablename = "product";
        ob.delete(tablename, col, selected_row); 
    }
    else
        JOptionPane.showMessageDialog(null, " Please select a row ");
               
// TODO add your handling code here:
    }//GEN-LAST:event_deleteActionPerformed

    private void deleteorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteorderActionPerformed
          int row = productTable.getSelectedRow();
        

        DefaultTableModel model = (DefaultTableModel) productTable.getModel();

        String selected_row = model.getValueAt(row, 0).toString();
        String col = productTable.getColumnName(0);
        System.out.println("row=" + selected_row + "column =" + col);
        String tablename = "ordertable";
       
       

        
        ob.delete(tablename, col, selected_row);        // TODO add your handling code here:
    }//GEN-LAST:event_deleteorderActionPerformed

    private void updateproductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateproductActionPerformed
      updatepanel.setVisible(true);
       
        text1.setVisible(true);
        text2.setVisible(true);
        okupdate.setVisible(true);
       int row =productTable.getSelectedRow();
        
        if(row>=0)
        {   
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        updatebox.setVisible(true);
        selected_row = model.getValueAt(row, 0).toString();
        col = productTable.getColumnName(0);
        System.out.println("row=" + selected_row + "column =" + col);
        }
        else
              JOptionPane.showMessageDialog(null, " Select a Row");
         //table = (String)updatebox.getSelectedItem();

        
        //ob.update(table, col, selected_row);
      // TODO add your handling code here:
    }//GEN-LAST:event_updateproductActionPerformed

    private void updateboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateboxActionPerformed
        
        selectedColumn=(String) updatebox.getSelectedItem();
        tab="product";
        text1.setText(selectedColumn);
       
        System.out.println("val="+value);
          //ob.update(tab,value,selectedColumn,col,selected_row);
        
             // TODO add your handling code here:
    }//GEN-LAST:event_updateboxActionPerformed

    private void courierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courierActionPerformed
        // TODO add your handling code here:
        int row2 =productTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
       
        selected_row2 = model.getValueAt(row2, 0).toString();
        col2 = productTable.getColumnName(0);
        tab2="orderTable";
        value2="delivered";
        selectedColumn2="delivery_status";
        ob.update(tab2,value2,selectedColumn2,col2,selected_row2);
        String res=ob.getAddress(selected_row2);
        int id=ob.getProduct_id(selected_row2);
        int q=ob.getProduct_quantity(selected_row2);
        System.out.println("frame address= "+res);
        int selected_row3=Integer.parseInt(selected_row2);
        
        ob.insertCourier(selected_row3,id,q,res);
     
        
        
    }//GEN-LAST:event_courierActionPerformed

    private void okupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okupdateActionPerformed
        // TODO add your handling code here:
         updatepanel.setVisible(true);
        selectedColumn=(String) updatebox.getSelectedItem();
        tab="product";
        value=text2.getText();
        text1.setText(selectedColumn);
       ob.update(tab, value, selectedColumn, col, selected_row);
        System.out.println("val="+value);
    }//GEN-LAST:event_okupdateActionPerformed

    private void sentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sentActionPerformed
        // TODO add your handling code here:
        productTable.removeAll();
                
       productTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                null
        ));
       
        
       DefaultTableModel model = (DefaultTableModel) productTable.getModel();
      
        //int i = 0;
        String n;
       // n=(String)tables.getSelectedItem();
        //n="ordertable";
        ArrayList content = ob.getSentProduct();
        //String[] columname=new String[content.size()];
        
        
        for (Object c : content) {
            
             //System.out.println("anni n"+c.toString());
             model.addColumn(c.toString());
            
           
        }
        int j = 0;
        Object[] rows;
        rows = new Object[content.size()];
        ResultSet result = ob.getTableData();

        try {
            while (result.next()) {
                String rowData = "";
                for (Object c : content) {
                    rowData = result.getString(c.toString());
                    rows[j++] = rowData;
                   }
               
                model.addRow(rows);
                j = 0;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_sentActionPerformed

    private void custActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custActionPerformed
        // TODO add your handling code here:
        String starCustomer=ob.seeStarCustomer();
        star.setText(starCustomer);
    }//GEN-LAST:event_custActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        new AdminTask().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton courier;
    private javax.swing.JButton cust;
    private javax.swing.JButton delete;
    private javax.swing.JButton deleteorder;
    private javax.swing.JPanel details;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton ok;
    private javax.swing.JButton okupdate;
    private javax.swing.JButton order;
    private javax.swing.JTable productTable;
    private javax.swing.JButton sent;
    private javax.swing.JLabel star;
    private javax.swing.JLabel text1;
    private javax.swing.JTextField text2;
    private javax.swing.JComboBox<String> updatebox;
    private javax.swing.JPanel updatepanel;
    private javax.swing.JButton updateproduct;
    // End of variables declaration//GEN-END:variables

    
}
